on:
  push:
    branches:
      - 'main'
      - 'test'

name: Create Release

env:
  NAME: gohi
  ENVIRONMENT: prod

jobs:
  # Step 1: Check for changes in specific files and build dependencies if needed
#  check-deps:
#    uses: ./.github/workflows/build-dependencies.yaml
#    secrets: inherit
#    permissions:
#      pull-requests: read
#      contents: read

  # Step 2: Build binaries for Linux and Windows
  build-bin-win:
    name: Build Windows Binary
    runs-on: ubuntu-latest
 #   needs: [ check-deps ]

    container:
      image: "docker.io/jedich/crossbuild-with-deps:main"

    steps:
      - name: install stuff
        run:  apt-get utdate; apt-get install -y  gcc libgtk-3-dev libayatana-appindicator3-dev
      - name: Checkout code
        uses: actions/checkout@v2

        # crossbuild binary is in the root of the build-dependencies container
      - name: Build Windows executable
        env:
          SUFFIX: windows-amd64.exe
          CGO_ENABLED: 1
          ENV: ${{ env.ENVIRONMENT }}
        run: |
          /crossbuild -p "windows/amd64" --build-cmd "make build-ci"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: main
          path: ./bin/

  build-bin-linux:
    name: Build Linux Binary
    runs-on: ubuntu-latest
#    needs: [ check-deps ]

    container:
      image: "docker.io/jedich/crossbuild-with-deps:main"

    steps:
      - name: install stuff
        run:  apt-get update; apt-get install -y  gcc libgtk-3-dev libayatana-appindicator3-dev

      - name: Checkout code
        uses: actions/checkout@v2


        # crossbuild binary is in the root of the build-dependencies container
      - name: Build Linux executable
        env:
          SUFFIX: linux-amd64
          CGO_ENABLED: 1
          ENV: ${{ env.ENVIRONMENT }}
        run: |
          /crossbuild -p "linux/amd64" --build-cmd "make build-ci"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: main
          path: ./bin/

